[
  { "label": "preliminary", "tests": [
    {
      "bare": "../browser-expectations.html",
      "comment": [
          "Test the browser environment behaves the way we expect. This is not",
          "a test of Caja per se, but we want to verify that changes to our",
          "test infrastructure do not break this test."]
    },
    { "driver": "meta-test.js" }
  ]},
  { "label": "cajajs", "tests": [
    {
      "driver": "test-cajajs-invocation.js",
      "comment": "Including non-minified execution in automated tests",
      "tests": [
        { "label": "nomin", "params": { "minified": "false" } },
        { "label": "min", "params": { "minified": "true" } }
      ]
    },
    { 
      "driver": "test-cajajs-version-skew-js-files.js",
      "comment": ["Changing the version baked into the taming frame JS will",
          "cause a version mismatch error in caja.js.",
          "TODO(felix8a): test taming.js right but guest.js wrong"]
    },
    {
      "label": "version-skew-cajajs",
      "driver": "test-cajajs-never-starts.js",
      "params": { "cajajs": "/caja/testing/skew-0000/caja.js" },
      "comment": ["Changing the version baked into caja.js will cause it to",
          "load the wrongly-named files for the host and guest frames, which",
          "should cause it to never make progress in load() or whenReady()",
          "calls."]
    },
    {
      "label": "version-skew-nonexistent-resources",
      "driver": "test-cajajs-never-starts.js",
      "params": { "resources": "/caja/testing/nonexistent" },
      "comment": ["Placing the wrong resources files where caja.js is",
          "expecting them should cause it to never make progress in load() or",
          "whenReady() calls."]
    },
    {
      "label": "version-skew-wrong-resources",
      "driver": "test-cajajs-never-starts.js",
      "params": { "resources": "/caja/testing/skew-0000" },
      "comment": ["Placing the wrong resources files where caja.js is",
          "expecting them should cause it to never make progress in load() or",
          "whenReady() calls."]
    },
    { "driver": "test-fetch-proxy.js" },
    { "driver": "test-client-uri-rewriting.js" },
    { "bare": "cajajs-bare-test.html" }
  ]},
  { "label": "guest", "tests": [
    { "guest": "test-basic-functions-guest.html" },
    { "guest": "test-domado-dom-guest.html" },
    { "driver": "test-domado-global.js" },
    { "driver": "test-domado-events.js" },
    { "guest": "test-domado-canvas-guest.html" },
    { "guest": "test-domado-forms-guest.html" },
    { "guest": "test-domado-iframe-guest.html" },
    { "driver": "test-domado-special.js" },
    { "driver": "test-domado-foreign.js" },
    { "guest": "test-domado-listlength.html" },
    { "guest": "test-language-guest.html" },
    { "guest": "test-inline-script.html" },
    { "guest": "test-external-script-guest.html" },
    { "driver": "test-relative-urls.js" },
    { "driver": "test-defensible-objects.js" },
    { "driver": "test-container-overflow.js" },
    { "driver": "test-target-attribute-presets.js" },
    { "driver": "test-unicode.js" },
    { "driver": "test-mitigating-url-rewriter.js" },
    { "guest": "test-css-imports-guest.html" },
    { "guest": "test-scan-guest.html" }
  ]},
  { "label": "taming", "tests": [
    { "driver": "test-taming-tamed.js" },
    { "driver": "test-taming-untamed.js" },
    { "driver": "test-taming-inout.js" },
    { "driver": "test-taming-errors.js" },
    { "driver": "test-taming-advice.js" },
    { "driver": "test-apitaming.js" }
  ]},
  {
    "label": "headless",
    "comment": "TODO(kpreid): integrate headless test runner",
    "manual": true,
    "tests": [
      { "bare": "csslexer-test.html" },
      { "bare": "cssparser_test.html" },
      { "bare": "css-stylesheet-test.html" },
      { "bare": "html-emitter-test.html" },
      { "bare": "html-sanitizer-test.html" },
      { "bare": "html-sanitizer-minified-test.html" },
      { "bare": "html-sanitizer-regress.html" },
      { "bare": "html-css-sanitizer-test.html" },
      { "bare": "html-css-sanitizer-minified-test.html" },
      { "bare": "sanitizecss_test.html" },
      { "bare": "uri_test.html" }
    ]
  }
]
